
points related to oops:

1. class does not occupy any space
2. Inheritance can be used to achieve runtime polymorphism
3. In Java, we use abstract class and interface to achieve abstraction.
4. 
	A JavaBean is just a normal Java class that conforms to a number of conventions:

	- it should have a public default constructor (i.e. a constructor that takes no arguments)
	- it should be serializable
	- it has getter and setter methods to get and set its properties
	
5. 

Object-based programming language follows all the features of OOPs except Inheritance. JavaScript and VBScript are examples of 		 object-based programming languages.

6. 

A variable which is created inside the class but outside the method is known as an instance variable. Instance variable doesn't get memory at compile time. It gets memory at runtime when an object or instance is created. That is why it is known as an instance variable.

7. 

The new keyword is used to allocate memory at runtime. All objects get memory in Heap memory area.

8. 

We can have multiple classes in different Java files or single Java file. If you define multiple classes in a single Java source file, it is a good idea to save the file name with the class name which has main() method.

9. 